[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;

uniform bool is_sinking = false;
uniform float progress : hint_range(0.0, 1.0);
uniform sampler2D mask_texture;
uniform sampler2D sprite_down;

vec4 dive_down(sampler2D tex, vec2 uv){
	
	float mask = texture(mask_texture, uv).r;
	
	if(mask <= progress){
		return texture(sprite_down,uv);
    }
	else if(mask <= (progress + 0.2)){
		float mix_value = (mask - progress) / 0.2; 
		vec4 mix_color = mix(texture(sprite_down,uv), texture(tex,uv), mix_value);
		return vec4(mix_color);
	}
	else
	{
		return texture(tex,uv);
	}
}

void fragment(){
	if(is_sinking){
		COLOR = dive_down(TEXTURE, UV);
	} else {
		COLOR = texture(TEXTURE,UV);
	}
}"
